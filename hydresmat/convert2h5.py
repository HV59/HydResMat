"""Tool for XML to HDF5 conversion for mesh data."""

""" Copyright (C) 2018-2019 Johannes Voss, Julian Jeggle, Raphael Wittkowski

    This file is part of HydResMat.

    HydResMat is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    HydResMat is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with HydResMat. If not, see <http://www.gnu.org/licenses/>."""

# This file should be used together with version 2018.1.0 of FEniCS
import dolfin as dol
import argparse
import os
import os.path
import sys

from hydresmat.common import COMM_WORLD

if __name__ == "__main__":
    PHYSICAL_REGION_EXT = "_physical_region.xml"
    FACET_REGION_EXT = "_facet_region.xml"

    # Parse commandline args
    parser = argparse.ArgumentParser(
        description="Convert XML files generated by dolfin-convert to HDF5.")
    parser.add_argument("source", help="Source file path. \
        The directory must contain this file and \
        corresponding _facet_region.xml and _physical_region.xml files")
    parser.add_argument("target", help="Target file path.")

    args = parser.parse_args()

    # Validate source path
    srcpath = args.source
    if not srcpath.endswith(".xml"):
        if os.path.exists(srcpath):
            print("Error: Invalid file extension (must be .xml) for {}".format(srcpath))
            sys.exit(1)
        srcpath += ".xml"
    if not os.path.exists(srcpath):
        print("Error: Cannot find source file {}".format(srcpath))
        sys.exit(1)
    srcpath_prefix = srcpath[:-4]
    for ext in [PHYSICAL_REGION_EXT, FACET_REGION_EXT]:
        if not os.path.exists(srcpath_prefix + ext):
            print("Error: Cannot find source file {}{}".format(srcpath_prefix, ext))
            sys.exit(1)

    # Import XML files
    mesh = dol.Mesh(srcpath)
    subdomains = dol.MeshFunction("size_t", mesh,
        srcpath_prefix+"_physical_region.xml")
    boundaries = dol.MeshFunction("size_t", mesh,
        srcpath_prefix+"_facet_region.xml")

    # Validate target path
    targetpath = args.target
    targetdir = os.path.dirname(targetpath)
    targetname = os.path.basename(targetpath)
    if not targetname:
        print("Error: Target must be a file path")
        sys.exit(1)
    if not targetname.endswith(".h5"):
        print("Warning: Target file has non-standard file extension. \
        Consider using .h5 as extension.")
    if os.path.exists(targetpath) and os.path.isdir(targetpath):
        print("Error: Target is an existing directory")
        sys.exit(1)
    if targetdir and not os.path.exists(targetdir):
        try:
            os.makedirs(targetdir)
        except Exception as e:
            print("Error while creating directory: {}".format(e))

    with dol.HDF5File(COMM_WORLD, targetpath, "w") as hdf:
      hdf.write(mesh, "/mesh")
      hdf.write(subdomains, "/subdomains")
      hdf.write(boundaries, "/boundaries")
